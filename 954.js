// 954. 二倍数对数组
// 给定一个长度为偶数的整数数组 arr，只有对 arr 进行重组后可以满足 “对于每个 0 <= i < len(arr) / 2，都有 arr[2 * i + 1] = 2 * arr[2 * i]” 时，返回 true；否则，返回 false。



// 示例 1：

// 输入：arr = [3,1,3,6]
// 输出：false
// 示例 2：

// 输入：arr = [2,1,2,6]
// 输出：false
// 示例 3：

// 输入：arr = [4,-2,2,-4]
// 输出：true
// 解释：可以用 [-2,-4] 和 [2,4] 这两组组成 [-2,-4,2,4] 或是 [2,4,-2,-4]


// 提示：

// 0 <= arr.length <= 3 * 104
// arr.length 是偶数
// -105 <= arr[i] <= 105

const assert = require('assert')

const canReorderDoubled = function (arr) {
    const cnt = new Map()

    for (let num of arr) {
        cnt.set(num, (cnt.get(num) || 0) + 1)
    }

    if ((cnt.get(0) || 0) % 2 !== 0) {
        return false
    }

    const vals = []
    for (let x of cnt.keys()) {
        vals.push(x)
    }

    vals.sort((a, b) => Math.abs(a) - Math.abs(b))

    for (let num of vals) {
        if ((cnt.get(2 * num) ||0) < cnt.get(num)) {
            return false
        }
        cnt.set(2 * num, (cnt.get(2 * num) || 0) - cnt.get(num))
    }

    return true
}

assert.deepEqual(canReorderDoubled([3, 1, 3, 6]), false)
assert.deepEqual(canReorderDoubled([2, 1, 2, 6]), false)
assert.deepEqual(canReorderDoubled([4, -2, 2, -4]), true)
assert.deepEqual(canReorderDoubled([2, 4, 0, 0, 8, 1]), true)
assert.deepEqual(canReorderDoubled(
    [-62, 86, 96, -18, 43, -24, -76, 13, -31, -26, -88, -13, 96, -44, 9, -20, -42, 100, -44, -24, -36, 28, -32, 58, -72, 20, 48, -36, -45, 14, 24, -64, -90, -44, -16, 86, -33, 48, 26, 29, -84, 10, 46, 50, -66, -8, -38, 92, -19, 43, 48, -38, -22, 18, -32, -48, -64, -10, -22, -48]
), true)

assert.deepEqual(canReorderDoubled(
    [-10, -35, 6, -20, -12, -14, -42, -3, -46, 74, -35, 7, 90, 38, -48, -92, -42, 18, -20, 36, -94, -6, 46, -5, 86, 76, 68, -49, 60, -86, -84, -28, -74, 14, -56, -49, 30, -2, -28, -6, 28, 72, -10, 16, -58, -6, 31, -24, 96, -6, 12, 74, 50, 37, -80, -5, 15, -84, 50, -14, -56, -29, -10, 10, 32, -16, -46, -1, 41, -92, 31, -58, -12, 36, 37, 6, 3, 14, 35, -28, -70, 90, 62, 7, -36, 18, -72, -34, -54, -46, -39, 92, -6, 84, 8, 45, 56, -47, 70, 25, -24, -12, 43, -12, -98, 46, 62, 48, -2, -20, 18, 6, -78, -26, 44, -41, -68, -98, -6, 62, 82, -3, 38, -43, -22, -36, -6, -3, -50, -18, -76, -27, 22, -10, 36, -21, -46, -5, 48, 68, -46, -9, -3, 34, -10, 100, 42, -25, -8, 23, -92, -13, 12, -23, 5, -5, 45, -2, -52, 74, -40, 12, 45, 14, 90, 50, -11, 7, -70, 25, -28, 16, 31, -40, 96, -82, 76, 37, 34, 2, 6, -23, 1, 30, 45, 90, 34, -26, -29, -84, -38, -4, -4, 17, 36, -18, -37, 3, -40, 6]
), false)